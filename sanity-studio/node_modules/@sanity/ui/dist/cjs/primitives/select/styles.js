"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.selectStyle = void 0;
var styled_components_1 = require("styled-components");
var styles_1 = require("../../styles");
var internal_1 = require("../../styles/internal");
function rootStyle() {
    return styled_components_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    position: relative;\n    width: stretch;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  "], ["\n    position: relative;\n    width: stretch;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  "])));
}
function inputBaseStyle(props) {
    var theme = props.theme;
    var font = theme.sanity.fonts.text;
    return styled_components_1.css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    -webkit-font-smoothing: antialiased;\n    appearance: none;\n    border: 0;\n    font-family: ", ";\n    color: inherit;\n    width: 100%;\n    outline: none;\n    margin: 0;\n\n    &:disabled {\n      opacity: 1;\n    }\n  "], ["\n    -webkit-font-smoothing: antialiased;\n    appearance: none;\n    border: 0;\n    font-family: ", ";\n    color: inherit;\n    width: 100%;\n    outline: none;\n    margin: 0;\n\n    &:disabled {\n      opacity: 1;\n    }\n  "])), font.family);
}
function inputColorStyle(props) {
    var theme = props.theme;
    var _a = theme.sanity, focusRing = _a.focusRing, input = _a.input;
    var color = theme.sanity.color.input;
    return styled_components_1.css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    /* enabled */\n    background-color: ", ";\n    color: ", ";\n    box-shadow: ", ";\n\n    /* hovered */\n    @media (hover: hover) {\n      &:not(:disabled):hover {\n        background-color: ", ";\n        color: ", ";\n        box-shadow: ", ";\n      }\n    }\n\n    /* focused */\n    &:not(:disabled):focus {\n      box-shadow: ", ";\n    }\n\n    /* disabled */\n    &:not([data-read-only]):disabled {\n      background-color: ", ";\n      color: ", ";\n      box-shadow: ", ";\n    }\n  "], ["\n    /* enabled */\n    background-color: ", ";\n    color: ", ";\n    box-shadow: ",
        ";\n\n    /* hovered */\n    @media (hover: hover) {\n      &:not(:disabled):hover {\n        background-color: ", ";\n        color: ", ";\n        box-shadow: ",
        ";\n      }\n    }\n\n    /* focused */\n    &:not(:disabled):focus {\n      box-shadow: ",
        ";\n    }\n\n    /* disabled */\n    &:not([data-read-only]):disabled {\n      background-color: ", ";\n      color: ", ";\n      box-shadow: ",
        ";\n    }\n  "])), color.default.enabled.bg, color.default.enabled.fg, internal_1.focusRingBorderStyle({
        color: color.default.enabled.border,
        width: input.border.width,
    }), color.default.hovered.bg, color.default.hovered.fg, internal_1.focusRingBorderStyle({
        color: color.default.hovered.border,
        width: input.border.width,
    }), internal_1.focusRingStyle({
        border: { width: input.border.width, color: color.default.enabled.border },
        focusRing: focusRing,
    }), color.default.disabled.bg, color.default.disabled.fg, internal_1.focusRingBorderStyle({
        color: color.default.disabled.border,
        width: input.border.width,
    }));
}
function textSize(size) {
    return { fontSize: styles_1.rem(size.fontSize), lineHeight: styles_1.rem(size.lineHeight) };
}
function inputTextSizeStyle(props) {
    var theme = props.theme, $fontSize = props.$fontSize;
    var sizes = theme.sanity.fonts.text.sizes;
    return styles_1.responsive(theme.sanity.media, styles_1.getResponsiveProp($fontSize), function (sizeIndex) {
        return textSize(sizes[sizeIndex] || sizes[2]);
    });
}
function inputStyle() {
    return [
        internal_1.responsiveRadiusStyle,
        inputBaseStyle,
        inputColorStyle,
        inputTextSizeStyle,
        internal_1.responsiveInputPaddingIconRightStyle,
    ];
}
function iconBoxStyle(props) {
    var theme = props.theme;
    var color = theme.sanity.color.input;
    return styled_components_1.css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    right: 0;\n\n    /* enabled */\n    --card-fg-color: ", ";\n\n    /* hover */\n    @media (hover: hover) {\n      select:not(disabled):not(:read-only):hover + & {\n        --card-fg-color: ", ";\n      }\n    }\n\n    /* disabled */\n    select:disabled + & {\n      --card-fg-color: ", ";\n    }\n\n    /* read-only */\n    select[data-read-only] + & {\n      opacity: 0;\n    }\n  "], ["\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    right: 0;\n\n    /* enabled */\n    --card-fg-color: ", ";\n\n    /* hover */\n    @media (hover: hover) {\n      select:not(disabled):not(:read-only):hover + & {\n        --card-fg-color: ", ";\n      }\n    }\n\n    /* disabled */\n    select:disabled + & {\n      --card-fg-color: ", ";\n    }\n\n    /* read-only */\n    select[data-read-only] + & {\n      opacity: 0;\n    }\n  "])), color.default.enabled.fg, color.default.hovered.fg, color.default.disabled.fg);
}
exports.selectStyle = {
    root: rootStyle,
    input: inputStyle,
    iconBox: iconBoxStyle,
};
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=styles.js.map