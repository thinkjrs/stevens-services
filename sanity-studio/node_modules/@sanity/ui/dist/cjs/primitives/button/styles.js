"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buttonColorStyles = exports.buttonBaseStyles = void 0;
var styled_components_1 = require("styled-components");
var internal_1 = require("../../styles/internal");
function buttonBaseStyles() {
    return styled_components_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    -webkit-font-smoothing: inherit;\n    appearance: none;\n    display: inline-flex;\n    align-items: center;\n    font: inherit;\n    border: 0;\n    outline: none;\n    user-select: none;\n    text-decoration: none;\n    border: 0;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    white-space: nowrap;\n    text-align: left;\n    position: relative;\n\n    & > span {\n      display: block;\n      flex: 1;\n      min-width: 0;\n      border-radius: inherit;\n    }\n\n    &::-moz-focus-inner {\n      border: 0;\n      padding: 0;\n    }\n  "], ["\n    -webkit-font-smoothing: inherit;\n    appearance: none;\n    display: inline-flex;\n    align-items: center;\n    font: inherit;\n    border: 0;\n    outline: none;\n    user-select: none;\n    text-decoration: none;\n    border: 0;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    white-space: nowrap;\n    text-align: left;\n    position: relative;\n\n    & > span {\n      display: block;\n      flex: 1;\n      min-width: 0;\n      border-radius: inherit;\n    }\n\n    &::-moz-focus-inner {\n      border: 0;\n      padding: 0;\n    }\n  "])));
}
exports.buttonBaseStyles = buttonBaseStyles;
var buttonTheme = { border: { width: 1 } };
function buttonColorVarsStyle(color) {
    return {
        '--card-bg-color': color.bg,
        '--card-fg-color': color.fg,
        '--card-border-color': color.border,
    };
}
function buttonColorStyles(props) {
    var _a, _b;
    var $mode = props.$mode, theme = props.theme;
    var focusRing = theme.sanity.focusRing;
    var base = theme.sanity.color.base;
    var mode = theme.sanity.color.button[$mode] || theme.sanity.color.button.default;
    var color = mode[props.$tone] || mode.default;
    var border = { width: buttonTheme.border.width, color: 'var(--card-border-color)' };
    return [
        buttonColorVarsStyle(color.enabled),
        {
            backgroundColor: 'var(--card-bg-color)',
            color: 'var(--card-fg-color)',
            boxShadow: internal_1.focusRingBorderStyle(border),
            '&:disabled, &[data-disabled="true"]': buttonColorVarsStyle(color.disabled),
            "&:not([data-disabled='true'])": {
                '&:focus': {
                    boxShadow: internal_1.focusRingStyle({ base: base, border: border, focusRing: focusRing }),
                },
                '&:focus:not(:focus-visible)': {
                    boxShadow: internal_1.focusRingBorderStyle(border),
                },
                '@media (hover: hover)': {
                    '&:hover': buttonColorVarsStyle(color.hovered),
                    '&:active': buttonColorVarsStyle(color.pressed),
                },
                '&[data-selected]': buttonColorVarsStyle(color.selected),
            },
        },
        (_b = (_a = theme.sanity.styles) === null || _a === void 0 ? void 0 : _a.button) === null || _b === void 0 ? void 0 : _b.root,
    ];
}
exports.buttonColorStyles = buttonColorStyles;
var templateObject_1;
//# sourceMappingURL=styles.js.map