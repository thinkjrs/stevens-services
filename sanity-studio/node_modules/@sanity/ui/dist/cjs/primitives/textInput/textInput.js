"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextInput = void 0;
var icons_1 = require("@sanity/icons");
var react_1 = __importStar(require("react"));
var react_is_1 = require("react-is");
var styled_components_1 = __importDefault(require("styled-components"));
var constants_1 = require("../../constants");
var hooks_1 = require("../../hooks");
var internal_1 = require("../../styles/internal");
var box_1 = require("../box");
var button_1 = require("../button");
var card_1 = require("../card");
var text_1 = require("../text");
var CLEAR_BUTTON_BOX_STYLE = { zIndex: 2 };
var Root = styled_components_1.default.span(internal_1.textInputStyle.root);
var InputRoot = styled_components_1.default.span(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  flex: 1;\n  min-width: 0;\n  display: block;\n  position: relative;\n"], ["\n  flex: 1;\n  min-width: 0;\n  display: block;\n  position: relative;\n"])));
var Prefix = styled_components_1.default(card_1.Card).attrs({ forwardedAs: 'span' })(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n\n  & > span {\n    display: block;\n    margin: -1px;\n  }\n"], ["\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n\n  & > span {\n    display: block;\n    margin: -1px;\n  }\n"])));
var Suffix = styled_components_1.default(card_1.Card).attrs({ forwardedAs: 'span' })(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n\n  & > span {\n    display: block;\n    margin: -1px;\n  }\n"], ["\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n\n  & > span {\n    display: block;\n    margin: -1px;\n  }\n"])));
var Input = styled_components_1.default.input(internal_1.responsiveInputPaddingStyle, internal_1.textInputStyle.input);
var Presentation = styled_components_1.default.span(internal_1.responsiveRadiusStyle, internal_1.textInputStyle.representation);
var LeftBox = styled_components_1.default(box_1.Box)(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  position: absolute;\n  top: 0;\n  left: 0;\n"], ["\n  position: absolute;\n  top: 0;\n  left: 0;\n"])));
var RightBox = styled_components_1.default(box_1.Box)(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  position: absolute;\n  top: 0;\n  right: 0;\n"], ["\n  position: absolute;\n  top: 0;\n  right: 0;\n"])));
exports.TextInput = react_1.forwardRef(function (props, forwardedRef) {
    var _a = props.border, border = _a === void 0 ? true : _a, clearButton = props.clearButton, _b = props.disabled, disabled = _b === void 0 ? false : _b, _c = props.fontSize, fontSize = _c === void 0 ? 2 : _c, icon = props.icon, iconRight = props.iconRight, onClear = props.onClear, _d = props.padding, paddingProp = _d === void 0 ? 3 : _d, prefix = props.prefix, _e = props.radius, radius = _e === void 0 ? 1 : _e, _f = props.space, space = _f === void 0 ? 3 : _f, suffix = props.suffix, customValidity = props.customValidity, _g = props.type, type = _g === void 0 ? 'text' : _g, restProps = __rest(props, ["border", "clearButton", "disabled", "fontSize", "icon", "iconRight", "onClear", "padding", "prefix", "radius", "space", "suffix", "customValidity", "type"]);
    var ref = hooks_1.useForwardedRef(forwardedRef);
    var padding = hooks_1.useResponsiveProp(paddingProp);
    // Transient properties
    var $hasClearButton = Boolean(clearButton);
    var $hasIcon = Boolean(icon);
    var $hasIconRight = Boolean(iconRight);
    var $hasSuffix = Boolean(suffix);
    var $hasPrefix = Boolean(prefix);
    hooks_1.useCustomValidity(ref, customValidity);
    // Prevent the clear button from taking the focus away from the input
    var handleClearMouseDown = react_1.useCallback(function (event) {
        event.preventDefault();
        event.stopPropagation();
    }, []);
    var handleClearClick = react_1.useCallback(function (event) {
        var _a;
        event.preventDefault();
        event.stopPropagation();
        if (onClear)
            onClear();
        // Focus the input, in case focus has been lost when clicking the clear button
        (_a = ref.current) === null || _a === void 0 ? void 0 : _a.focus();
    }, [onClear, ref]);
    // Render prefix (memoized)
    var prefixNode = react_1.useMemo(function () {
        return prefix && (react_1.default.createElement(Prefix, { borderTop: true, borderLeft: true, borderBottom: true, radius: radius, sizing: "border" },
            react_1.default.createElement("span", null, prefix)));
    }, [prefix, radius]);
    // Render presentation (memoized)
    var presentationNode = react_1.useMemo(function () { return (react_1.default.createElement(Presentation, { "$border": border, "$hasPrefix": $hasPrefix, "$hasSuffix": $hasSuffix, "$radius": radius },
        icon && (react_1.default.createElement(LeftBox, { padding: padding },
            react_1.default.createElement(text_1.Text, { size: fontSize },
                react_1.isValidElement(icon) && icon,
                react_is_1.isValidElementType(icon) && react_1.createElement(icon)))),
        !$hasClearButton && iconRight && (react_1.default.createElement(RightBox, { padding: padding },
            react_1.default.createElement(text_1.Text, { size: fontSize },
                react_1.isValidElement(iconRight) && iconRight,
                react_is_1.isValidElementType(iconRight) && react_1.createElement(iconRight)))))); }, [border, fontSize, icon, iconRight, padding, radius, $hasClearButton, $hasPrefix, $hasSuffix]);
    // Render clear button (memoized)
    var clearButtonBoxPadding = react_1.useMemo(function () { return padding.map(function (v) { return v - 2; }); }, [padding]);
    var clearButtonPadding = react_1.useMemo(function () { return padding.map(function (v) { return v - 1; }); }, [padding]);
    var clearButtonProps = react_1.useMemo(function () { return (typeof clearButton === 'object' ? clearButton : constants_1.EMPTY_RECORD); }, [clearButton]);
    var clearButtonNode = react_1.useMemo(function () {
        return clearButton && (react_1.default.createElement(RightBox, { padding: clearButtonBoxPadding, style: CLEAR_BUTTON_BOX_STYLE },
            react_1.default.createElement(button_1.Button, __assign({}, clearButtonProps, { "data-qa": "clear-button", fontSize: fontSize, icon: icons_1.CloseIcon, mode: "bleed", onClick: handleClearClick, onMouseDown: handleClearMouseDown, padding: clearButtonPadding }))));
    }, [
        clearButton,
        clearButtonBoxPadding,
        clearButtonPadding,
        clearButtonProps,
        fontSize,
        handleClearClick,
        handleClearMouseDown,
    ]);
    // Render suffix (memoized)
    var suffixNode = react_1.useMemo(function () {
        return suffix && (react_1.default.createElement(Suffix, { borderTop: true, borderRight: true, borderBottom: true, radius: radius, sizing: "border" },
            react_1.default.createElement("span", null, suffix)));
    }, [radius, suffix]);
    return (react_1.default.createElement(Root, { "data-ui": "TextInput" },
        prefixNode,
        react_1.default.createElement(InputRoot, null,
            react_1.default.createElement(Input, __assign({ "data-as": "input" }, restProps, { "$iconLeft": $hasIcon, "$iconRight": $hasIconRight || $hasClearButton, "$padding": padding, "$space": space, "$fontSize": fontSize, disabled: disabled, ref: ref, type: type })),
            presentationNode,
            clearButtonNode),
        suffixNode));
});
exports.TextInput.displayName = 'TextInput';
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;
//# sourceMappingURL=textInput.js.map