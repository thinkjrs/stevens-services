var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { responsiveGridStyle } from '../../styles/internal';
import { Box } from '../box';
const Root = styled(Box)(responsiveGridStyle);
export const Grid = forwardRef((props, ref) => {
    const { as, autoRows, autoCols, autoFlow, columns, gap, gapX, gapY, rows, children } = props, restProps = __rest(props, ["as", "autoRows", "autoCols", "autoFlow", "columns", "gap", "gapX", "gapY", "rows", "children"]);
    return (React.createElement(Root, Object.assign({ "data-as": typeof as === 'string' ? as : undefined, "data-ui": "Grid" }, restProps, { "$autoRows": autoRows, "$autoCols": autoCols, "$autoFlow": autoFlow, "$columns": columns, "$gap": gap, "$gapX": gapX, "$gapY": gapY, "$rows": rows, forwardedAs: as, ref: ref }), children));
});
Grid.displayName = 'Grid';
//# sourceMappingURL=grid.js.map